{"ast":null,"code":"var _jsxFileName = \"/Users/mortenovrebo/Prosjekt/suppeland/pages/funnyText.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport style from \"./FunnyText.module.scss\";\nimport classNames from \"classnames\";\n\nconst toText = symbol => {\n  return {\n    symbol,\n    fontsize: \"5vh\"\n  };\n};\n\nconst FunnyText = ({\n  text\n}) => {\n  const textArray = text.split(\"\").map(toText);\n  const {\n    0: symbols,\n    1: setSymbols\n  } = useState(textArray);\n  const {\n    0: currentIndex,\n    1: setCurrentIndex\n  } = useState(0);\n  useInterval(function () {\n    if (currentIndex <= textArray.length) {\n      setCurrentIndex(currentIndex + 1);\n    } else {\n      setCurrentIndex(0);\n    }\n  }, 200, textArray.length + 1);\n\n  const defaultText = () => {\n    const newSymbols = symbols.map((s, i) => {\n      return _objectSpread({}, s, {\n        fontsize: \"5vh\"\n      });\n    });\n    setSymbols(newSymbols);\n  };\n\n  const enlargeFont = (symbol, index) => {\n    console.log(index);\n    const newSymbols = symbols.map((s, i) => {\n      if (i === index) {\n        return _objectSpread({}, s, {\n          fontsize: \"10vh\"\n        });\n      }\n\n      if (i === index - 1 || i === index + 1) {\n        return _objectSpread({}, s, {\n          fontsize: \"7vh\"\n        });\n      }\n\n      return _objectSpread({}, s, {\n        fontsize: \"5vh\"\n      });\n    });\n    setSymbols(newSymbols);\n  };\n\n  return __jsx(\"div\", {\n    className: style.basic,\n    onMouseOut: defaultText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, symbols.map((symbol, index) => {\n    const currentStyle = classNames({\n      [style.show]: index < currentIndex,\n      [style.hide]: index >= currentIndex\n    });\n    const divStyle = {\n      fontSize: symbol.fontsize\n    };\n    return __jsx(\"div\", {\n      onMouseOver: () => enlargeFont(symbol, index),\n      key: index,\n      style: divStyle,\n      className: classNames(currentStyle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, index < currentIndex ? symbol.symbol : \"\");\n  }));\n};\n\nfunction useInterval(callback, delay, numberOfTicks = 100) {\n  const savedCallback = useRef();\n  const {\n    0: ticks,\n    1: setTicks\n  } = useState(0);\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]); // Set up the interval.\n\n  useEffect(() => {\n    function tick() {\n      setTicks(ticks + 1);\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n\n      if (ticks === numberOfTicks) {\n        clearInterval(id);\n      }\n\n      return () => clearInterval(id);\n    }\n  }, [delay, ticks]);\n}\n\nexport default FunnyText;","map":{"version":3,"sources":["/Users/mortenovrebo/Prosjekt/suppeland/pages/funnyText.tsx"],"names":["React","useRef","useEffect","useState","style","classNames","toText","symbol","fontsize","FunnyText","text","textArray","split","map","symbols","setSymbols","currentIndex","setCurrentIndex","useInterval","length","defaultText","newSymbols","s","i","enlargeFont","index","console","log","basic","currentStyle","show","hide","divStyle","fontSize","callback","delay","numberOfTicks","savedCallback","ticks","setTicks","current","tick","id","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport style from \"./FunnyText.module.scss\";\nimport classNames from \"classnames\";\n\ninterface IProps {\n  text: string;\n}\n\ntype FontSize = \"5vh\" | \"7vh\" | \"10vh\";\n\ninterface IText {\n  symbol: string;\n  fontsize: FontSize;\n}\n\nconst toText = (symbol: string): IText => {\n  return {\n    symbol,\n    fontsize: \"5vh\"\n  };\n};\n\nconst FunnyText = ({ text }: IProps) => {\n  const textArray = text.split(\"\").map(toText);\n\n  const [symbols, setSymbols] = useState(textArray);\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n\n  useInterval(\n    function() {\n      if (currentIndex <= textArray.length) {\n        setCurrentIndex(currentIndex + 1);\n      } else {\n        setCurrentIndex(0);\n      }\n    },\n    200,\n    textArray.length + 1\n  );\n\n  const defaultText = () => {\n    const newSymbols = symbols.map<IText>((s, i) => {\n      return {\n        ...s,\n        fontsize: \"5vh\"\n      };\n    });\n    setSymbols(newSymbols);\n  };\n\n  const enlargeFont = (symbol: IText, index: number) => {\n    console.log(index);\n\n    const newSymbols = symbols.map<IText>((s, i) => {\n      if (i === index) {\n        return {\n          ...s,\n          fontsize: \"10vh\"\n        };\n      }\n      if (i === index - 1 || i === index + 1) {\n        return {\n          ...s,\n          fontsize: \"7vh\"\n        };\n      }\n      return {\n        ...s,\n        fontsize: \"5vh\"\n      };\n    });\n\n    setSymbols(newSymbols);\n  };\n  return (\n    <div className={style.basic} onMouseOut={defaultText}>\n      {symbols.map((symbol, index) => {\n        const currentStyle = classNames({\n          [style.show]: index < currentIndex,\n          [style.hide]: index >= currentIndex\n        });\n        const divStyle = {\n          fontSize: symbol.fontsize\n        };\n        return (\n          <div\n            onMouseOver={() => enlargeFont(symbol, index)}\n            key={index}\n            style={divStyle}\n            className={classNames(currentStyle)}\n          >\n            {index < currentIndex ? symbol.symbol : \"\"}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nfunction useInterval(callback: () => void, delay: number, numberOfTicks = 100) {\n  const savedCallback = useRef<any>();\n  const [ticks, setTicks] = useState(0);\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      setTicks(ticks + 1);\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      if (ticks === numberOfTicks) {\n        clearInterval(id);\n      }\n      return () => clearInterval(id);\n    }\n  }, [delay, ticks]);\n}\n\nexport default FunnyText;\n"]},"metadata":{},"sourceType":"module"}