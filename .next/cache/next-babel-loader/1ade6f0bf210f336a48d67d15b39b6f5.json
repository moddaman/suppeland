{"ast":null,"code":"var _jsxFileName = \"/Users/mortenovrebo/Prosjekt/suppeland/pages/AboutLivePhoto/aboutLivePhoto.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport LivePhoto from \"../LivePhoto/livePhoto\";\nimport style from \"./aboutLivePhoto.module.css\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { tomorrow } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\n\nconst AboutLive = () => {\n  const {\n    0: showImplementation,\n    1: setShowImplementation\n  } = useState(false);\n\n  const copyText = () => {};\n\n  return __jsx(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Live Photo\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"A React component to show live photos \", __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), \"Hover over the image to \\\"play\\\" photo\"), __jsx(\"div\", {\n    className: style.super,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"click to play and pause\"), __jsx(LivePhoto, {\n    interaction: \"CLICK\",\n    videoPath: \"images/jonas.mp4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"hover to plau\"), __jsx(LivePhoto, {\n    interaction: \"HOVER\",\n    videoPath: \"images/linn.mp4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }))), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Apple has a LivePhotosKit JS, but i found it a little bit chunky to use. So i made a react wrapper over it. Here is how you would use it:\"), __jsx(SyntaxHighlighter, {\n    language: \"javascript\",\n    style: tomorrow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, usageString), __jsx(\"button\", {\n    onClick: () => setShowImplementation(!showImplementation),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, showImplementation ? \"hide implementation\" : \"Show implementation\"), showImplementation && __jsx(SyntaxHighlighter, {\n    language: \"javascript\",\n    style: tomorrow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, codeString), __jsx(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};\n\nexport default AboutLive;\nconst usageString = `<LivePhoto imagePath={\"./images/horse.jpg\"} videoPath={\"./images/horse.mp4\"} />\n`;\nconst codeString = `import React, { useRef, useEffect, useState } from \"react\";\nimport * as LivePhotosKit from \"livephotoskit\";\nimport style from \"./LivePhoto.module.scss\";\nimport { PlaybackStyleLiteral } from \"livephotoskit\";\n\ninterface IProps {\n  imagePath: string;\n  videoPath: string;\n  playbackStyle?: PlaybackStyleLiteral;\n}\n\nconst LivePhoto = ({\n  imagePath,\n  videoPath,\n  playbackStyle = LivePhotosKit.PlaybackStyle.LOOP\n}: IProps) => {\n  const textInput = useRef<HTMLInputElement>(null);\n  const [player, setPlayer] = useState<LivePhotosKit.Player>();\n\n  useEffect(() => {\n    if (textInput && textInput.current) {\n      const htmlPlayer = LivePhotosKit.Player(textInput.current);\n      setPlayer(htmlPlayer);\n      if (player) {\n        player.showsNativeControls = false;\n        player.playbackStyle = playbackStyle;\n      }\n    }\n  });\n\n  const playLoop = () => {\n    if (player) {\n      player.play();\n    }\n  };\n\n  const playStop = () => {\n    if (player) {\n      player.pause();\n    }\n  };\n\n  return (\n    <div\n      className={style.photo}\n      onMouseEnter={playLoop}\n      onTouchStart={playLoop}\n      onTouchEnd={playStop}\n      onMouseLeave={playStop}\n      ref={textInput}\n      data-live-photo\n      data-photo-src={imagePath}\n      data-video-src={videoPath}\n    />\n  );\n};\n\nexport default LivePhoto;\n`;","map":{"version":3,"sources":["/Users/mortenovrebo/Prosjekt/suppeland/pages/AboutLivePhoto/aboutLivePhoto.tsx"],"names":["React","useState","LivePhoto","style","Prism","SyntaxHighlighter","tomorrow","AboutLive","showImplementation","setShowImplementation","copyText","super","usageString","codeString"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,SAASC,KAAK,IAAIC,iBAAlB,QAA2C,0BAA3C;AACA,SAASC,QAAT,QAAyB,gDAAzB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AAAA,OAACC,kBAAD;AAAA,OAAqBC;AAArB,MAA8CR,QAAQ,CAAC,KAAD,CAA5D;;AACA,QAAMS,QAAQ,GAAG,MAAM,CAAE,CAAzB;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxC,2CAFF,EAME;AAAK,IAAA,SAAS,EAAEP,KAAK,CAACQ,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE,MAAC,SAAD;AAAW,IAAA,WAAW,EAAE,OAAxB;AAAiC,IAAA,SAAS,EAAE,kBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,MAAC,SAAD;AAAW,IAAA,WAAW,EAAE,OAAxB;AAAiC,IAAA,SAAS,EAAE,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,CANF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iJAhBF,EAoBE,MAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAC,YAA5B;AAAyC,IAAA,KAAK,EAAEL,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,WADH,CApBF,EAuBE;AAAQ,IAAA,OAAO,EAAE,MAAMH,qBAAqB,CAAC,CAACD,kBAAF,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,kBAAkB,GAAG,qBAAH,GAA2B,qBADhD,CAvBF,EA0BGA,kBAAkB,IACjB,MAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAC,YAA5B;AAAyC,IAAA,KAAK,EAAEF,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,UADH,CA3BJ,EA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BF,CADF;AAmCD,CAtCD;;AAwCA,eAAeN,SAAf;AAEA,MAAMK,WAAW,GAAI;CAArB;AAGA,MAAMC,UAAU,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAApB","sourcesContent":["import React, { useState } from \"react\";\nimport LivePhoto from \"../LivePhoto/livePhoto\";\nimport style from \"./aboutLivePhoto.module.css\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { tomorrow } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\n\nconst AboutLive = () => {\n  const [showImplementation, setShowImplementation] = useState(false);\n  const copyText = () => {};\n  return (\n    <section>\n      <h3>Live Photo</h3>\n      <p>\n        A React component to show live photos <br />\n        Hover over the image to \"play\" photo\n      </p>\n      <div className={style.super}>\n        <div>\n          <div>click to play and pause</div>\n          <LivePhoto interaction={\"CLICK\"} videoPath={\"images/jonas.mp4\"} />\n        </div>\n        <div>\n          <div>hover to plau</div>\n          <LivePhoto interaction={\"HOVER\"} videoPath={\"images/linn.mp4\"} />\n        </div>\n      </div>\n      <p>\n        Apple has a LivePhotosKit JS, but i found it a little bit chunky to use.\n        So i made a react wrapper over it. Here is how you would use it:\n      </p>\n      <SyntaxHighlighter language=\"javascript\" style={tomorrow}>\n        {usageString}\n      </SyntaxHighlighter>\n      <button onClick={() => setShowImplementation(!showImplementation)}>\n        {showImplementation ? \"hide implementation\" : \"Show implementation\"}\n      </button>\n      {showImplementation && (\n        <SyntaxHighlighter language=\"javascript\" style={tomorrow}>\n          {codeString}\n        </SyntaxHighlighter>\n      )}\n      <code></code>\n    </section>\n  );\n};\n\nexport default AboutLive;\n\nconst usageString = `<LivePhoto imagePath={\"./images/horse.jpg\"} videoPath={\"./images/horse.mp4\"} />\n`;\n\nconst codeString = `import React, { useRef, useEffect, useState } from \"react\";\nimport * as LivePhotosKit from \"livephotoskit\";\nimport style from \"./LivePhoto.module.scss\";\nimport { PlaybackStyleLiteral } from \"livephotoskit\";\n\ninterface IProps {\n  imagePath: string;\n  videoPath: string;\n  playbackStyle?: PlaybackStyleLiteral;\n}\n\nconst LivePhoto = ({\n  imagePath,\n  videoPath,\n  playbackStyle = LivePhotosKit.PlaybackStyle.LOOP\n}: IProps) => {\n  const textInput = useRef<HTMLInputElement>(null);\n  const [player, setPlayer] = useState<LivePhotosKit.Player>();\n\n  useEffect(() => {\n    if (textInput && textInput.current) {\n      const htmlPlayer = LivePhotosKit.Player(textInput.current);\n      setPlayer(htmlPlayer);\n      if (player) {\n        player.showsNativeControls = false;\n        player.playbackStyle = playbackStyle;\n      }\n    }\n  });\n\n  const playLoop = () => {\n    if (player) {\n      player.play();\n    }\n  };\n\n  const playStop = () => {\n    if (player) {\n      player.pause();\n    }\n  };\n\n  return (\n    <div\n      className={style.photo}\n      onMouseEnter={playLoop}\n      onTouchStart={playLoop}\n      onTouchEnd={playStop}\n      onMouseLeave={playStop}\n      ref={textInput}\n      data-live-photo\n      data-photo-src={imagePath}\n      data-video-src={videoPath}\n    />\n  );\n};\n\nexport default LivePhoto;\n`;\n"]},"metadata":{},"sourceType":"module"}