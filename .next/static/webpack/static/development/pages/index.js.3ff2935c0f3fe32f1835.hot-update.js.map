{"version":3,"file":"static/webpack/static/development/pages/index.js.3ff2935c0f3fe32f1835.hot-update.js","sources":["webpack:///./pages/FunnyText/funnyText.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport style from \"./funnyText.module.css\";\nimport classNames from \"classnames\";\n\ninterface IProps {\n  text: string;\n}\n\ntype FontSize = \"5vh\" | \"7vh\" | \"10vh\";\n\ninterface IText {\n  symbol: string;\n  fontsize: FontSize;\n}\n\nconst toText = (symbol: string): IText => {\n  return {\n    symbol,\n    fontsize: \"5vh\"\n  };\n};\n\nconst FunnyText = ({ text }: IProps) => {\n  const title = \"S u p p e l a n d\";\n  const textArray = title.split(\" \").map(toText);\n\n  const [symbols, setSymbols] = useState(textArray);\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n\n  useInterval(\n    function() {\n      if (currentIndex <= textArray.length) {\n        setCurrentIndex(currentIndex + 1);\n      } else {\n        setCurrentIndex(0);\n      }\n    },\n    200,\n    textArray.length + 1\n  );\n\n  const defaultText = () => {\n    const newSymbols = symbols.map<IText>((s, i) => {\n      return {\n        ...s,\n        fontsize: \"5vh\"\n      };\n    });\n    setSymbols(newSymbols);\n  };\n\n  const enlargeFont = (symbol: IText, index: number) => {\n    const newSymbols = symbols.map<IText>((s, i) => {\n      if (i === index) {\n        return {\n          ...s,\n          fontsize: \"10vh\"\n        };\n      }\n      if (i === index - 1 || i === index + 1) {\n        return {\n          ...s,\n          fontsize: \"7vh\"\n        };\n      }\n      return {\n        ...s,\n        fontsize: \"5vh\"\n      };\n    });\n\n    setSymbols(newSymbols);\n  };\n  return (\n    <div className={style.basic} onMouseOut={defaultText}>\n      {symbols.map((symbol, index) => {\n        const currentStyle = classNames({\n          [style.show]: index < currentIndex,\n          [style.hide]: index >= currentIndex\n        });\n        const divStyle = {\n          fontSize: symbol.fontsize\n        };\n        return (\n          <div\n            onMouseOver={() => enlargeFont(symbol, index)}\n            key={index}\n            style={divStyle}\n            className={classNames(currentStyle)}\n          >\n            {index < currentIndex ? symbol.symbol : \"\"}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nfunction useInterval(callback: () => void, delay: number, numberOfTicks = 100) {\n  const savedCallback = useRef<any>();\n  const [ticks, setTicks] = useState(0);\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      setTicks(ticks + 1);\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      if (ticks === numberOfTicks) {\n        clearInterval(id);\n      }\n      return () => clearInterval(id);\n    }\n  }, [delay, ticks]);\n}\n\nexport default FunnyText;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAEA;AAFA;AAIA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAIA;AACA;AADA;AAGA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}