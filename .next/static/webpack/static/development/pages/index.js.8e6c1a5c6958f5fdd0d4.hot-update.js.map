{"version":3,"file":"static/webpack/static/development/pages/index.js.8e6c1a5c6958f5fdd0d4.hot-update.js","sources":["webpack:///./pages/AboutLivePhoto/aboutLivePhoto.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport LivePhoto from \"../LivePhoto/livePhoto\";\nimport style from \"./aboutLivePhoto.module.css\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { tomorrow } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\n\nconst AboutLive = () => {\n  const [showImplementation, setShowImplementation] = useState(false);\n  return (\n    <section>\n      <h3>Live Photo</h3>\n      <p>\n        En React komponent for å vise \"live photos\" <br />\n      </p>\n      <div className={style.super}>\n        <div>\n          <div>Klikk på bildet på for spille / Pause</div>\n          <LivePhoto interaction={\"CLICK\"} videoPath={\"images/jonas.mp4\"} />\n        </div>\n        <div>\n          <div>Hover to play</div>\n          <LivePhoto interaction={\"HOVER\"} videoPath={\"images/linn.mp4\"} />\n        </div>\n      </div>\n      <p>\n        Prøvde først Apple sitt LivePhotosKit JS for å vise \"live photos\", men\n        fant ut at det var mye lettere å bare bruke HTML Video.\n      </p>\n      <SyntaxHighlighter language=\"javascript\" style={tomorrow}>\n        {usageString}\n      </SyntaxHighlighter>\n      <button onClick={() => setShowImplementation(!showImplementation)}>\n        {showImplementation ? \"hide implementation\" : \"Show implementation\"}\n      </button>\n      {showImplementation && (\n        <SyntaxHighlighter language=\"javascript\" style={tomorrow}>\n          {codeString}\n        </SyntaxHighlighter>\n      )}\n      <code></code>\n    </section>\n  );\n};\n\nexport default AboutLive;\n\nconst usageString = `<LivePhoto interaction={\"CLICK\"} videoPath={\"<Video url>\"} />\n`;\n\nconst codeString = `import React, { useRef, useEffect } from \"react\";\nimport style from \"./livePhoto.module.css\";\n\ntype Interaction = \"CLICK\" | \"HOVER\";\n\ninterface IProps {\n  videoPath: string;\n  interaction: Interaction;\n}\n\nconst LivePhoto = ({ videoPath, interaction }: IProps) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.preload = \"1\";\n      videoRef.current.volume = 0;\n    }\n  }, [videoRef.current]);\n\n  const toggle = () => {\n    if (videoRef.current) {\n      videoRef.current.paused\n        ? videoRef.current.play()\n        : videoRef.current.pause();\n    }\n  };\n\n  return (\n    <video\n      className={style.video}\n      loop\n      preload=\"none\"\n      ref={videoRef}\n      onMouseEnter={interaction === \"HOVER\" ? toggle : () => console.log(\"X\")}\n      onMouseLeave={interaction === \"HOVER\" ? toggle : () => console.log(\"X\")}\n      onClick={interaction === \"CLICK\" ? toggle : () => console.log(\"X\")}\n    >\n      <source src={videoPath} type=\"video/mp4\"></source>\n    </video>\n  );\n};\n\nexport default LivePhoto;\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AAGA;;;;A","sourceRoot":""}